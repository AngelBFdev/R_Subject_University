predictions=predict(fm1,X_tst)
plot(y_tst,predictions)
#####MSE calculation
MSE=MSE+mean((y_tst-predictions)^2)
#MSE
####Correlación de Pearson
APC=cor(y_tst,predictions)
APC
}
MSE=MSE/10
MSE
Advertising[trn_set,1:11]
Advertising[trn_set,1:3]
#Examen
rm(list=ls())
library(e1071)
library(MASS)
Advertising=data.frame(read.csv("Advertising.csv",header = T))
head(Advertising)
dim(Advertising)
Advertising=Advertising[,-1]
head(Advertising)
set.seed(11)
MSE=0
for (i in 1:10){
trn_set=sample(nrow(Advertising),0.60*nrow(Advertising))
#trn_set
all_set=1:200
#all_set
tst_set=all_set[-trn_set]
#tst_set
X_trn=Advertising[trn_set,1:3,5:12]
#head(X_trn)
#dim(X_trn)
X_tst=Advertising[tst_set,1:3,5:12]
#head(X_tst)
#dim(X_tst)
y_trn=Advertising[trn_set,4]
#y_trn
y_tst=Advertising[tst_set,4]
#y_tst
fm1=svm(y=y_trn,x=X_trn,kernel="linear")
#fm1
####Predictions
predictions=predict(fm1,X_tst)
plot(y_tst,predictions)
#####MSE calculation
MSE=MSE+mean((y_tst-predictions)^2)
#MSE
####Correlación de Pearson
APC=cor(y_tst,predictions)
APC
}
MSE=MSE/10
MSE
Advertising[trn_set,1:3,5:12]
Advertising[trn_set,1:3-5:12]
#Examen
rm(list=ls())
library(e1071)
library(MASS)
Advertising=data.frame(read.csv("Advertising.csv",header = T))
head(Advertising)
dim(Advertising)
Advertising=Advertising[,-1]
head(Advertising)
set.seed(11)
MSE=0
for (i in 1:10){
trn_set=sample(nrow(Advertising),0.60*nrow(Advertising))
#trn_set
all_set=1:200
#all_set
tst_set=all_set[-trn_set]
#tst_set
X_trn=Advertising[trn_set,1:9]
#head(X_trn)
#dim(X_trn)
X_tst=Advertising[tst_set,1:9]
#head(X_tst)
#dim(X_tst)
y_trn=Advertising[trn_set,10]
#y_trn
y_tst=Advertising[tst_set,10]
#y_tst
fm1=svm(y=y_trn,x=X_trn,kernel="linear")
#fm1
####Predictions
predictions=predict(fm1,X_tst)
plot(y_tst,predictions)
#####MSE calculation
MSE=MSE+mean((y_tst-predictions)^2)
#MSE
####Correlación de Pearson
APC=cor(y_tst,predictions)
APC
}
MSE=MSE/10
MSE
#Examen
rm(list=ls())
library(e1071)
library(MASS)
Advertising=data.frame(read.csv("Advertising.csv",header = T))
head(Advertising)
dim(Advertising)
Advertising=Advertising[,-1]
head(Advertising)
set.seed(11)
MSE=0
for (i in 1:10){
trn_set=sample(nrow(Advertising),0.60*nrow(Advertising))
#trn_set
all_set=1:200
#all_set
tst_set=all_set[-trn_set]
#tst_set
X_trn=Advertising[trn_set,1:9]
#head(X_trn)
#dim(X_trn)
X_tst=Advertising[tst_set,1:9]
#head(X_tst)
#dim(X_tst)
y_trn=Advertising[trn_set,10]
#y_trn
y_tst=Advertising[tst_set,10]
#y_tst
fm1=svm(y=y_trn,x=X_trn,kernel="linear")
#fm1
####Predictions
predictions=predict(fm1,X_tst)
plot(y_tst,predictions)
#####MSE calculation
MSE=MSE+mean((y_tst-predictions)^2)
#MSE
####Correlación de Pearson
APC=cor(y_tst,predictions)
APC
}
MSE=MSE/10
MSE
rm(list=ls())
library(e1071)
library(MASS)
Advertising=data.frame(read.csv("Advertising.csv",header = T))
head(Advertising)
dim(Advertising)
Advertising=Advertising[,-1]
head(Advertising)
set.seed(11)
MSE=0
for (i in 1:10){
trn_set=sample(nrow(Advertising),0.60*nrow(Advertising))
#trn_set
all_set=1:200
#all_set
tst_set=all_set[-trn_set]
#tst_set
X_trn=Advertising[trn_set,1:9]
#head(X_trn)
#dim(X_trn)
X_tst=Advertising[tst_set,1:9]
#head(X_tst)
#dim(X_tst)
y_trn=Advertising[trn_set,10]
#y_trn
y_tst=Advertising[tst_set,10]
#y_tst
fm1=svm(y=y_trn,x=X_trn,kernel="radial")
#fm1
####Predictions
predictions=predict(fm1,X_tst)
plot(y_tst,predictions)
#####MSE calculation
MSE=MSE+mean((y_tst-predictions)^2)
#MSE
####Correlación de Pearson
APC=cor(y_tst,predictions)
APC
}
MSE=MSE/10
MSE
rm(list=ls())
library(e1071)
library(MASS)
Advertising=data.frame(read.csv("Advertising.csv",header = T))
head(Advertising)
dim(Advertising)
Advertising=Advertising[,-1]
head(Advertising)
set.seed(11)
MSE=0
for (i in 1:10){
trn_set=sample(nrow(Advertising),0.60*nrow(Advertising))
#trn_set
all_set=1:200
#all_set
tst_set=all_set[-trn_set]
#tst_set
X_trn=Advertising[trn_set,1:9]
#head(X_trn)
#dim(X_trn)
X_tst=Advertising[tst_set,1:9]
#head(X_tst)
#dim(X_tst)
y_trn=Advertising[trn_set,10]
#y_trn
y_tst=Advertising[tst_set,10]
#y_tst
fm1=svm(y=y_trn,x=X_trn,kernel="polynomial")
#fm1
####Predictions
predictions=predict(fm1,X_tst)
plot(y_tst,predictions)
#####MSE calculation
MSE=MSE+mean((y_tst-predictions)^2)
#MSE
####Correlación de Pearson
APC=cor(y_tst,predictions)
APC
}
MSE=MSE/10
MSE
rm(list=ls())
library(e1071)
library(MASS)
Advertising=data.frame(read.csv("Advertising.csv",header = T))
head(Advertising)
dim(Advertising)
Advertising=Advertising[,-1]
head(Advertising)
set.seed(11)
MSE=0
for (i in 1:10){
trn_set=sample(nrow(Advertising),0.60*nrow(Advertising))
#trn_set
all_set=1:200
#all_set
tst_set=all_set[-trn_set]
#tst_set
X_trn=Advertising[trn_set,1:9]
#head(X_trn)
#dim(X_trn)
X_tst=Advertising[tst_set,1:9]
#head(X_tst)
#dim(X_tst)
y_trn=Advertising[trn_set,10]
#y_trn
y_tst=Advertising[tst_set,10]
#y_tst
fm1=svm(y=y_trn,x=X_trn,kernel="polynomial")
#fm1
####Predictions
predictions=predict(fm1,X_tst)
plot(y_tst,predictions)
#####MSE calculation
MSE=MSE+mean((y_tst-predictions)^2)
#MSE
####Correlación de Pearson
APC=cor(y_tst,predictions)
APC
}
MSE=MSE/10
MSE
#Examen
rm(list=ls())
library(e1071)
library(MASS)
Advertising=data.frame(read.csv("Advertising.csv",header = T))
head(Advertising)
dim(Advertising)
Advertising=Advertising[,-1]
head(Advertising)
set.seed(11)
MSE=0
for (i in 1:10){
trn_set=sample(nrow(Advertising),0.60*nrow(Advertising))
#trn_set
all_set=1:200
#all_set
tst_set=all_set[-trn_set]
#tst_set
X_trn=Advertising[trn_set,1:9]
#head(X_trn)
#dim(X_trn)
X_tst=Advertising[tst_set,1:9]
#head(X_tst)
#dim(X_tst)
y_trn=Advertising[trn_set,10]
#y_trn
y_tst=Advertising[tst_set,10]
#y_tst
fm1=svm(y=y_trn,x=X_trn,kernel="sigmoid")
#fm1
####Predictions
predictions=predict(fm1,X_tst)
plot(y_tst,predictions)
#####MSE calculation
MSE=MSE+mean((y_tst-predictions)^2)
#MSE
####Correlación de Pearson
APC=cor(y_tst,predictions)
APC
}
MSE=MSE/10
MSE
set.seed(11)
rm(list=ls())
library(e1071)
library(MASS)
Advertising=data.frame(read.csv("Advertising.csv",header = T))
head(Advertising)
dim(Advertising)
Advertising=Advertising[,-1]
head(Advertising)
MSE=0
for (i in 1:10){
trn_set=sample(nrow(Advertising),0.60*nrow(Advertising))
#trn_set
all_set=1:200
#all_set
tst_set=all_set[-trn_set]
#tst_set
X_trn=Advertising[trn_set,1:9]
#head(X_trn)
#dim(X_trn)
X_tst=Advertising[tst_set,1:9]
#head(X_tst)
#dim(X_tst)
y_trn=Advertising[trn_set,10]
#y_trn
y_tst=Advertising[tst_set,10]
#y_tst
fm1=svm(y=y_trn,x=X_trn,kernel="sigmoid")
#fm1
####Predictions
predictions=predict(fm1,X_tst)
plot(y_tst,predictions)
#####MSE calculation
MSE=MSE+mean((y_tst-predictions)^2)
#MSE
####Correlación de Pearson
APC=cor(y_tst,predictions)
APC
}
MSE=MSE/10
MSE
#Examen
library(quadprog)
Dmat = matrix(c(4,2,
2,4),2,2,byrow=T)
dvec = c(4,6)
Amat <- t(matrix(c(-1, 1, 0,
-2, 0, 1), 3, 2))
Amat
bvec <- c(-2, 0, 0)
sol <- solve.QP(Dmat, dvec, Amat, bvec)
sol$value
sol$solution
#3.1
library(quadprog)
Dmat = matrix(c(4,2,0,
2,4,2,
0,2,6),3,3,byrow=T)
dvec = c(-1,3,5)
Amat <- t(matrix(c(1, -3, 1, 0, 0,
1, -2, 0, 1, 0,
1, -1, 0, 0, 1), 5, 3))
Amat
bvec <- c(1, -6, 0, 0,0)
sol <- solve.QP(Dmat, dvec, Amat, bvec)
sol$value
sol$solution
#3.1
library(quadprog)
Dmat = matrix(c(0,0,0,
0,0,0,
0,0,0),3,3,byrow=T)
dvec = c(11,15,9)
Amat <- t(matrix(c(1, -3, 1, 0, 0,
1, -2, 0, 1, 0,
1, -1, 0, 0, 1), 5, 3))
Amat
bvec <- c(1, -6, 0, 0,0)
sol <- solve.QP(Dmat, dvec, Amat, bvec)
sol$value
sol$solution
#3.1
library(quadprog)
Dmat = matrix(c(1,0,0,
0,1,0,
0,0,1),3,3,byrow=T)
dvec = c(11,15,9)
Amat <- t(matrix(c(1, -3, 1, 0, 0,
1, -2, 0, 1, 0,
1, -1, 0, 0, 1), 5, 3))
Amat
bvec <- c(1, -6, 0, 0,0)
sol <- solve.QP(Dmat, dvec, Amat, bvec)
sol$value
sol$solution
#3.1
library(quadprog)
Dmat = matrix(c(1,0,0,
0,1,0,
0,0,1),3,3,byrow=T)
dvec = c(11,15,9)
Amat <- t(matrix(c(-1, -1, 3, 1, 0, 0,
-2, -2, 1, 0, 1, 0,
-3, -1, 1, 0, 0, 1), 6, 3))
Amat
bvec <- c(-12, -10, -13, 0, 0,0)
sol <- solve.QP(Dmat, dvec, Amat, bvec)
sol$value
sol$solution
#3.1
library(quadprog)
Dmat = matrix(c(1,0,0,
0,1,0,
0,0,1),3,3,byrow=T)
dvec = c(-11,-15,-9)
Amat <- t(matrix(c(-1, -1, 3, 1, 0, 0,
-2, -2, 1, 0, 1, 0,
-3, -1, 1, 0, 0, 1), 6, 3))
Amat
bvec <- c(-12, -10, -13, 0, 0,0)
sol <- solve.QP(Dmat, dvec, Amat, bvec)
sol$value
sol$solution
#2
library(quadprog)
Dmat = matrix(c(4,4,
4,6),2,2,byrow=T)
dvec = c(6,3)
Amat <- t(matrix(c(-1, -2, 1, 0,
-1, -3, 0, 1), 4, 2))
Amat
bvec <- c(-1, -4, 0, 0)
sol <- solve.QP(Dmat, dvec, Amat, bvec)
sol$value
sol$solution
library(quadprog)
Dmat = matrix(c(4,4,
4,6),2,2,byrow=T)
dvec = c(6,3)
Amat <- t(matrix(c(-1, -2, 1, 0,
-1, -3, 0, 1), 4, 2))
Amat
bvec <- c(-1, -4, 0, 0)
sol <- solve.QP(Dmat, dvec, Amat, bvec)
sol$value
sol$solution
#Examen
library(quadprog)
Dmat = matrix(c(4,4,
4,6),2,2,byrow=T)
dvec = c(6,3)
Amat <- t(matrix(c(-1, -2, 1, 0,
-1, -3, 0, 1), 4, 2))
Amat
bvec <- c(1, 4, 0, 0)
sol <- solve.QP(Dmat, dvec, Amat, bvec)
sol$value
sol$solution
#3.1
library(quadprog)
Dmat = matrix(c(4,2,0,
2,4,2,
0,2,6),3,3,byrow=T)
dvec = c(-1,3,5)
Amat <- t(matrix(c(1, -3, 1, 0, 0,
1, -2, 0, 1, 0,
1, -1, 0, 0, 1), 5, 3))
Amat
bvec <- c(1, -6, 0, 0,0)
sol <- solve.QP(Dmat, dvec, Amat, bvec)
sol$value
sol$solution
library(quadprog)
Dmat = matrix(c(4,-4,
-4,8),2,2,byrow=T)
dvec = c(15,30)
Amat <- t(matrix(c(-1, 1, 0,
-2, 0, 1), 3, 2))
Amat
bvec <- c(-30, 0, 0)
sol <- solve.QP(Dmat, dvec, Amat, bvec)
sol$value
sol$solution
library(quadprog)
Dmat = matrix(c(1,0,
0,1),2,2,byrow=T)
dvec = c(.3,.9)
Amat <- t(matrix(c(1, -.21, .03, 1, 0,
1,  .3, -.01, 0, 1), 5, 2))
Amat
bvec <- c(800, 0, 0, 0, 0)
sol <- solve.QP(Dmat, dvec, Amat, bvec)
sol$value
sol$solution
#5
library(quadprog)
Dmat = matrix(c(1,0,
0,1),2,2,byrow=T)
dvec = c(50,18)
Amat <- t(matrix(c(-2, -1,  1, 0,
-1, -1,  0, 1), 4, 2))
Amat
bvec <- c(-100, -80, 0, 0)
sol <- solve.QP(Dmat, dvec, Amat, bvec)
sol$value
sol$solution
